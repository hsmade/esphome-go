package conf

type Config struct {
	//Name string
	VerifyPasswordCallback func(string) bool
	DeviceInfo             DeviceInfo
	// sensors []Sensor // interface?
}

type DeviceInfo struct {
	UsesPassword bool `protobuf:"varint,1,opt,name=uses_password,json=usesPassword,proto3" json:"uses_password,omitempty"`
	// The name of the node, given by "App.set_name()"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The mac address of the device. For example "AC:BC:32:89:0E:A9"
	MacAddress string `protobuf:"bytes,3,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	// A string describing the ESPHome version. For example "1.10.0"
	EsphomeVersion string `protobuf:"bytes,4,opt,name=esphome_version,json=esphomeVersion,proto3" json:"esphome_version,omitempty"`
	// A string describing the date of compilation, this is generated by the compiler
	// and therefore may not be in the same format all the time.
	// If the user isn't using ESPHome, this will also not be set.
	CompilationTime string `protobuf:"bytes,5,opt,name=compilation_time,json=compilationTime,proto3" json:"compilation_time,omitempty"`
	// The model of the board. For example NodeMCU
	Model        string `protobuf:"bytes,6,opt,name=model,proto3" json:"model,omitempty"`
	HasDeepSleep bool   `protobuf:"varint,7,opt,name=has_deep_sleep,json=hasDeepSleep,proto3" json:"has_deep_sleep,omitempty"`
	// The esphome project details if set
	ProjectName                 string `protobuf:"bytes,8,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	ProjectVersion              string `protobuf:"bytes,9,opt,name=project_version,json=projectVersion,proto3" json:"project_version,omitempty"`
	WebserverPort               uint32 `protobuf:"varint,10,opt,name=webserver_port,json=webserverPort,proto3" json:"webserver_port,omitempty"`
	LegacyBluetoothProxyVersion uint32 `protobuf:"varint,11,opt,name=legacy_bluetooth_proxy_version,json=legacyBluetoothProxyVersion,proto3" json:"legacy_bluetooth_proxy_version,omitempty"`
	BluetoothProxyFeatureFlags  uint32 `protobuf:"varint,15,opt,name=bluetooth_proxy_feature_flags,json=bluetoothProxyFeatureFlags,proto3" json:"bluetooth_proxy_feature_flags,omitempty"`
	Manufacturer                string `protobuf:"bytes,12,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	FriendlyName                string `protobuf:"bytes,13,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
	VoiceAssistantVersion       uint32 `protobuf:"varint,14,opt,name=voice_assistant_version,json=voiceAssistantVersion,proto3" json:"voice_assistant_version,omitempty"`
	SuggestedArea               string `protobuf:"bytes,16,opt,name=suggested_area,json=suggestedArea,proto3" json:"suggested_area,omitempty"`
}
